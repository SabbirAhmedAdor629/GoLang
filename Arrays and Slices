
package main

import "fmt"

func main() {
	// age := [...]int{20, 24, 39, 40}
	// age := [4]int{20, 24, 39, 40}
	// fmt.Println(age)

	var students [3]string
	fmt.Printf("Students : %v\n", students)
	students[0] = "Lisa"
	fmt.Println(students[0])
	fmt.Printf("Students : %v\n", students)
	fmt.Printf("Number of Students : %v\n", len(students))  // length function to find the length
  
  
  // 2D Array
	var identityMatrix [3][3]int = [3][3]int{{0, 0, 1}, {0, 0, 1}, {0, 0, 1}}
	fmt.Println(identityMatrix)
  
  
  // Copy of array and pass by reference
  a := [3]int{1, 3, 4}
	//b := a  // copy of entire array
	b := &a // Using pointer reference to the same address
	b[1] = 5

	fmt.Println(a)
	fmt.Println(b)
  
  
  
  // SLICE
  a := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
	b := a
	c := a[3:]
	d := a[:5]
	e := a[3:9]

	fmt.Println(a)
	fmt.Println(b)
	fmt.Println(c)
	fmt.Println(d)
	fmt.Println(e)
  
  // SLICE using built in make function
  

}















package main

import "fmt"

func main() {
	//age := [4]int{20, 24, 39, 40}
  age := [...]int{20, 24, 39, 40}  // using array literals (large enough to hold the data)
	fmt.Printf("Age are : %v\n", age)
  
  // age := [4]int{20, 24, 39, 40}
	// fmt.Println(age)
}
